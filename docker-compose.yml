services:
  n8n:
    build:
      context: .
      dockerfile: Dockerfile.n8n
    image: n8n-with-dockercli
    restart: always
    ports:
      - "5678:5678"
    dns:
      - 8.8.8.8
      - 1.1.1.1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      # Important for security - generate a random string
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-secret-encryption-key}
      # Uncomment the following for timezone configuration
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-UTC}
      # Database configuration 
      - DB_TYPE=${DB_TYPE:-sqlite}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE:-n8n}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST:-postgres}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT:-5432}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD:-n8n}
    volumes:
      - ./n8n_data:/home/node/.n8n
      - ./local-files:/files
      - /mnt/z/n8n_backups:/backups  # Mount your backup directory if you have one
      - /var/run/docker.sock:/var/run/docker.sock
    # Optional dependency on postgres - requires Docker Compose v2.20.2+
    # When postgres profile is not active, n8n will start without it
    depends_on:
      postgres:
        condition: service_healthy
        required: false

  postgres:
    image: postgres:17-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_POSTGRESDB_USER:-n8n}
      - POSTGRES_PASSWORD=${DB_POSTGRESDB_PASSWORD:-n8n}
      - POSTGRES_DB=${DB_POSTGRESDB_DATABASE:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_POSTGRESDB_USER:-n8n} -d ${DB_POSTGRESDB_DATABASE:-n8n}"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - postgres

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
